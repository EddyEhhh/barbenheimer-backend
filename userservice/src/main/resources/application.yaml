server:
  port: 0

authentication:
  server:
    url:
      token: http://${keycloak.host}:${keycloak.port}/realms/barbenheimer-realm/protocol/openid-connect/token
      logout: http://${keycloak.host}:${keycloak.port}/realms/barbenheimer-realm/protocol/openid-connect/logout
      register: http://${keycloak.host}:${keycloak.port}/auth/admin/realms/barbenheimer-realm/users

oauth2-client-credentials:
  scope: openid, profile, roles
  grant-type: password
  provider: keycloak


spring:

  application:
    name: user-service

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://${keycloak.host}:${keycloak.port}/realms/barbenheimer-realm
          jwt-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs


#Eureka
eureka:
  client:
    serviceUrl:
      defaultZone: http://${discovery.username}:${discovery.password}@${discovery.server.host}:${discovery.server.port}/eureka


logging:
  level:
    root: INFO
    org:
      springframework:
        cloud:
          gateway:
            route:
              RouteDefinitionLocator: INFO
            '(root)': TRACE


## Zipkin
management:
  zipkin:
    tracing:
      endpoint: http://127.0.0.1:9411/api/v2/spans
  tracing:
    sampling:
      probability: 1.0