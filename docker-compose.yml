version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:latest
    container_name: broker
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_HOST://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT

  # Zipkin
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - 9411:9411
  
  # Eureka server
  discovery-server:
    image: barbenheimer/discovery-server:latest
    container_name: discovery-server
    ports:
      - 8761:8761
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DISCOVERY_PASSWORD=${DISCOVERY_PASSWORD}
      - DISCOVERY_USERNAME=${DISCOVERY_USERNAME}
    depends_on:
      - zipkin

  # mailer-service
  mailer-service:
    image: barbenheimer/mailer-service:latest
    container_name: mailer-service
    ports:
      - 11000-11999:11000-11999
    environment:
      MAIL_EMAIL: ${MAIL_EMAIL}
      MAIL_HOST: ${MAIL_HOST}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      MAIL_PORT: ${MAIL_PORT}
      DISCOVERY_USERNAME: ${DISCOVERY_USERNAME}
      DISCOVERY_PASSWORD: ${DISCOVERY_PASSWORD}
      DISCOVERY_SERVER_HOST: host.docker.internal
      DISCOVERY_SERVER_PORT: ${DISCOVERY_SERVER_PORT}
      KAFKA_SERVER_HOST: host.docker.internal
      KAFKA_SERVER_PORT: ${KAFKA_SERVER_PORT}
    depends_on:
      - discovery-server

  # movie-service
  movie-service:
    image: barbenheimer/movie-service:latest
    container_name: movie-service
    ports:
      - 10000-10999:10000-10999
    environment:
      AWS_BUCKET: ${AWS_BUCKET}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
      DATABASE_HOST: host.docker.internal # ${DATABASE_HOST}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_SCHEMA: ${DATABASE_SCHEMA}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      STRIPE_PRIVATE_KEY: ${STRIPE_PRIVATE_KEY}
      WEBHOOK_SECRET: ${WEBHOOK_SECRET}
      DISCOVERY_USERNAME: ${DISCOVERY_USERNAME}
      DISCOVERY_PASSWORD: ${DISCOVERY_PASSWORD}
      DISCOVERY_SERVER_HOST: host.docker.internal 
      DISCOVERY_SERVER_PORT: ${DISCOVERY_SERVER_PORT}
      DISCOVERY_SERVER_URL: ${DISCOVERY_SERVER_URL}
      KAFKA_SERVER_HOST: host.docker.internal
      KAFKA_SERVER_PORT: ${KAFKA_SERVER_PORT}
    depends_on:
      - discovery-server


  # api-gateway
  # api-gateway:
  #   image: barbenheimer/api-gateway:latest
  #   container_name: api-gateway
  #   ports:
  #     - 8080:8080
  #   environment:
  #     DISCOVERY_USERNAME: ${DISCOVERY_USERNAME}
  #     DISCOVERY_PASSWORD: ${DISCOVERY_PASSWORD}
  #     DISCOVERY_SERVER_HOST: host.docker.internal 
  #     DISCOVERY_SERVER_PORT: ${DISCOVERY_SERVER_PORT}
  #     DISCOVERY_SERVER_URL: ${DISCOVERY_SERVER_URL}
  #   depends_on:
  #     - discovery-server
  #     - movie-service
  #     - mailer-service

    # mysql
    # mysql:
    #   image: mysql/mysql-server:8.0.32
    #   container_name: mysql-server
    #   restart: always
    #   environment:
    #     -
    #   ports:
    #     - 3306:3306
      

#  mysql:
  #  image: mysql/mysql-server:8.0.32
  #  restart: always
  #  environment:
  #    MYSQL_ROOT_PASSWORD: example
#
#  adminer:
#    image: adminer
#    restart: always
#    ports:
#      - 8080:8080
#

#
#
#  ## Eureka Server
#  discovery-server:
#    image: barbenheimer/discovery-server:latest
#    container_name: discovery-server
#    ports:
#      - "8761:8761"
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#    depends_on:
#      - zipkin
#
#  api-gateway:
#  image: barbenheimer/api-gateway:latest
#  container_name: api-gateway
#  ports:
#    - "8080:8080"
#  expose:
#    - "8080"
#  environment:
#    - SPRING_PROFILES_ACTIVE=docker
#    - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY= TRACE
#  depends_on:
#    - zipkin
#    - discovery-server
#
#
#  ## Movie-Service Docker Compose Config
#  movie-service:
#    container_name: movie-service
#    image: barbenheimer/movie-service:latest
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#    depends_on:
#      - mysql
#      - discovery-server
#      - api-gateway

