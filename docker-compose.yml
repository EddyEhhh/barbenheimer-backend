version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:latest
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_HOST://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_HOST

  # Zipkin
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"

#  mysql:
#    image: mysql
#    restart: always
#    environment:
#      MYSQL_ALLOW_EMPTY_PASSWORD: true
#    env_file:
#      - .env
#    ports:
#      - "3306:3306"
#    healthcheck:
#      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
#      timeout: 20s
#      retries: 10

#  adminer:
#    image: adminer
#    restart: always
#    ports:
#      - 8080:8080
#
#
  api-gateway:
    build: ./api-gateway
    image: api-gateway:latest
    container_name: api-gateway
    ports:
      - "8080:8080"
    expose:
      - "8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY= TRACE
    env_file:
      - .env
    depends_on:
      - discovery-server
      - movie-service
      - mailer-service

  ## Eureka Server
  discovery-server:
    build: ./discovery-server
    image: discovery-server:latest
    container_name: discovery-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    env_file:
      - .env
    depends_on:
      - zipkin

  ## Movie-Service Docker Compose Config
  movie-service:
    build: ./movie-service
    container_name: movie-service
    image: movie-service:latest
    environment:
      - MYSQL_PORT=3306
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=broker:29092
      - SPRING_KAFKA_CONSUMER_GROUP_ID=movie-group
      - SPRING_DATASOURCE_URL=jdbc:mysql://barbenheimer.c0eioduvlh2s.ap-southeast-1.rds.amazonaws.com:3306/barbenheimer?autoReconnect=true&useSSL=false
    env_file:
      - .env
    depends_on:
      - broker


  mailer-service:
    build: ./mailer-service
    image: mailer-service:latest
    container_name: mailer-service
    ports:
      - "465:465"
    env_file:
      - .env
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=broker:29092
      - SPRING_KAFKA_CONSUMER_GROUP_ID=mailer-group
    depends_on:
      - discovery-server
      - broker
